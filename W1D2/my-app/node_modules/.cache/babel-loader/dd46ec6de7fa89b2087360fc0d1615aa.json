{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\my-app\\\\src\\\\ListDemoApp.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nfunction ListItem(_ref) {\n  var numbers = _ref.numbers;\n  return numbers.map(function (n, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5\n      },\n      __self: this\n    }, n);\n  });\n}\n\nfunction NumberList(_ref2) {\n  var numbers = _ref2.numbers;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    numbers: numbers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}\n\nfunction TableItem(_ref3) {\n  var numbers = _ref3.numbers;\n  return numbers.map(function (n, index) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, n));\n  });\n}\n\nfunction NumberTable(_ref4) {\n  var numbers = _ref4.numbers;\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Value\"), React.createElement(TableItem, {\n    numbers: numbers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}\n\nfunction ListDemo(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"All numbers passed in via props\"), React.createElement(NumberList, {\n    numbers: props.numbers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(NumberTable, {\n    numbers: props.numbers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      numbers: [1, 2, 3]\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 5000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var newArray = [].concat(_toConsumableArray(this.state.numbers), [this.state.numbers.length + 1]);\n      this.setState({\n        numbers: newArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ListDemo, {\n        numbers: this.state.numbers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:\\Users\\mich5\\Documents\\JavaScript\\React\\W1D2\\my-app\\src\\ListDemoApp.js"],"names":["React","Component","ListItem","numbers","map","n","index","NumberList","TableItem","NumberTable","ListDemo","props","App","state","timerID","setInterval","tick","clearInterval","newArray","length","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,SAASC,QAAT,OAA+B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC3B,SAAQA,OAAO,CAACC,GAAR,CAAY,UAACC,CAAD,EAAIC,KAAJ;AAAA,WAAc;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,CAAjB,CAAd;AAAA,GAAZ,CAAR;AACH;;AACD,SAASE,UAAT,QAAiC;AAAA,MAAXJ,OAAW,SAAXA,OAAW;AAC7B,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEA,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,CAAR;AACH;;AAED,SAASK,SAAT,QAAgC;AAAA,MAAXL,OAAW,SAAXA,OAAW;AAC5B,SAAQA,OAAO,CAACC,GAAR,CAAY,UAACC,CAAD,EAAIC,KAAJ;AAAA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,CAAjB,CAAJ,CAAd;AAAA,GAAZ,CAAR;AACH;;AACD,SAASI,WAAT,QAAkC;AAAA,MAAXN,OAAW,SAAXA,OAAW;AAC9B,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP,EAAqB,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEA,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CAAR;AACH;;AAED,SAASO,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACR,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEQ,KAAK,CAACR,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;IACoBS,G;;;;;AACjB,eAAYD,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKE,KAAL,GAAa;AAAEV,MAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAX,KAAb;AAFe;AAGlB;;;;wCAEmB;AAAA;;AAChB,WAAKW,OAAL,GAAeC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OAAD,EAAoB,IAApB,CAA1B;AACH;;;2CAEsB;AACnBC,MAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACH;;;2BAEM;AACH,UAAMI,QAAQ,gCAAO,KAAKL,KAAL,CAAWV,OAAlB,IAA2B,KAAKU,KAAL,CAAWV,OAAX,CAAmBgB,MAAnB,GAA4B,CAAvD,EAAd;AACA,WAAKC,QAAL,CAAc;AACVjB,QAAAA,OAAO,EAAEe;AADC,OAAd;AAGH;;;6BAEQ;AACL,aAAO,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWV,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EAvB4BH,KAAK,CAACC,S;;SAAlBW,G","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nfunction ListItem({ numbers }) {\r\n    return (numbers.map((n, index) => <li key={index}>{n}</li>));\r\n}\r\nfunction NumberList({ numbers }) {\r\n    return (<ul><ListItem numbers={numbers} /></ul>);\r\n}\r\n\r\nfunction TableItem({ numbers }) {\r\n    return (numbers.map((n, index) => <tr><td key={index}>{n}</td></tr>));\r\n}\r\nfunction NumberTable({ numbers }) {\r\n    return (<table><th>Value</th><TableItem numbers={numbers} /></table>);\r\n}\r\n\r\nfunction ListDemo(props) {\r\n    return (\r\n        <div>\r\n            <h2>All numbers passed in via props</h2>\r\n            <NumberList numbers={props.numbers} />\r\n            <NumberTable numbers={props.numbers} />\r\n        </div>\r\n    );\r\n}\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { numbers: [1, 2, 3] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(), 5000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        const newArray = [...this.state.numbers, this.state.numbers.length + 1];\r\n        this.setState({\r\n            numbers: newArray\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <ListDemo numbers={this.state.numbers} />;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}