{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\LiftingState\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\LiftingState\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\LiftingState\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\LiftingState\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\LiftingState\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mich5\\\\Documents\\\\JavaScript\\\\React\\\\W1D2\\\\LiftingState\\\\src\\\\CountDemo.js\",\n    _this = this;\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport infoImage from \"./images/infoButton.svg\";\n\nvar CountPresenter = function CountPresenter(props) {\n  return React.createElement(\"div\", {\n    className: \"count-presenter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.title), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.val));\n};\n\nvar CountButtons = function CountButtons(_ref) {\n  var text = _ref.text,\n      inc = _ref.inc,\n      property = _ref.property;\n  return React.createElement(\"div\", {\n    className: \"count-btns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, text), React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: inc.bind(_this, property, \"+\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: inc.bind(_this, property, \"-\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: function onClick() {\n      return inc(property, \"c\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"C\"));\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      count1: 0,\n      //Initial value for the first counter\n      count2: 3,\n      //Initial value for the second counter\n      showInfo: false //Not really a part of the demo. Used to present the \"educational\" image\n\n    };\n\n    _this2.incrementCounter = function (counterToIncrement, whatToDo) {\n      if (whatToDo === \"+\") {\n        _this2.setState(function (state) {\n          return state[counterToIncrement] += 1;\n        });\n      } else if (whatToDo === \"-\") {\n        _this2.setState(function (state) {\n          return state[counterToIncrement] -= 1;\n        });\n      } else {\n        _this2.setState(function (state) {\n          return state[counterToIncrement] = 0;\n        });\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container outer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Props and Lifting State Demo\", React.createElement(\"span\", {\n        style: {\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        checked: this.state.showInfo,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            showInfo: e.target.checked\n          });\n        },\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), \"Show info\")), React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          paddingTop: 25,\n          width: 500,\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(CountPresenter, {\n        title: \"Counter-1\",\n        val: this.state.count1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(CountPresenter, {\n        title: \"Counter-2\",\n        val: this.state.count2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"count-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(CountButtons, {\n        text: \"Counter 1\",\n        property: \"count1\",\n        inc: this.incrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(CountButtons, {\n        text: \"Counter 2\",\n        property: \"count2\",\n        inc: this.incrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.showInfo && React.createElement(\"img\", {\n        src: infoImage,\n        className: \"center-img\",\n        alt: \"infoImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\mich5\\Documents\\JavaScript\\React\\W1D2\\LiftingState\\src\\CountDemo.js"],"names":["React","Component","CountPresenter","props","title","val","CountButtons","text","inc","property","bind","App","state","count1","count2","showInfo","incrementCounter","counterToIncrement","whatToDo","setState","textAlign","fontSize","e","target","checked","paddingTop","width","margin","infoImage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport infoImage from \"./images/infoButton.svg\";\r\n\r\nconst CountPresenter = props => {\r\n  return (\r\n    <div className=\"count-presenter\">\r\n      <h4>{props.title}</h4>\r\n      <h2>{props.val}</h2>\r\n    </div>\r\n  );\r\n};\r\nconst CountButtons = ({ text, inc, property }) => {\r\n  return (\r\n    <div className=\"count-btns\">\r\n      <h4>{text}</h4>\r\n      <button className=\"btn btn-info\" onClick={inc.bind(this, property, \"+\")}>\r\n        +\r\n      </button>\r\n      <button className=\"btn btn-info\" onClick={inc.bind(this, property, \"-\")}>\r\n        -\r\n      </button>\r\n      {/** This is just another way to pass arguments to a function from within an event handler  */}\r\n      <button className=\"btn btn-info\" onClick={() => inc(property, \"c\")}>\r\n        C\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nclass App extends Component {\r\n  state = {   \r\n    count1: 0, //Initial value for the first counter\r\n    count2: 3, //Initial value for the second counter\r\n    showInfo: false, //Not really a part of the demo. Used to present the \"educational\" image\r\n  };\r\n\r\n  incrementCounter = (counterToIncrement, whatToDo) => {\r\n    if (whatToDo === \"+\") {\r\n      this.setState(state => (state[counterToIncrement] += 1));\r\n    } else if (whatToDo === \"-\") {\r\n      this.setState(state => (state[counterToIncrement] -= 1));\r\n    } else {\r\n      this.setState(state => (state[counterToIncrement] = 0));\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container outer\">\r\n        <h2 style={{ textAlign: \"center\" }}>\r\n          Props and Lifting State Demo\r\n          <span style={{ fontSize: 12 }}>\r\n            <input\r\n              checked={this.state.showInfo}\r\n              onChange={e => this.setState({ showInfo: e.target.checked })}\r\n              type=\"checkbox\"\r\n            />\r\n            Show info\r\n          </span>\r\n        </h2>\r\n        <div className=\"row\" style={{ paddingTop: 25, width:500,margin:\"auto\" }}>\r\n          <div className=\"col-5\">\r\n            <CountPresenter title=\"Counter-1\" val={this.state.count1} />\r\n            <CountPresenter title=\"Counter-2\" val={this.state.count2} />\r\n          </div>\r\n          <div className=\"col-5\">\r\n              <div className=\"count-btn\">\r\n                <CountButtons text=\"Counter 1\" property=\"count1\" inc={this.incrementCounter}/>\r\n                <br />\r\n                <CountButtons text=\"Counter 2\" property=\"count2\" inc={this.incrementCounter}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {this.state.showInfo && <img src={infoImage} className=\"center-img\" alt=\"infoImage\" />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}